-faggressive-loop-optimizations
Aggressively optimize loops using language constraints.

-fallocation-dce
Tell DCE to remove unused C++ allocations.

-fasynchronous-unwind-tables
Generate unwind tables that are exact at each instruction boundary.

-fauto-inc-dec
Generate auto-inc/dec instructions.

-fbit-tests
Use bit tests for sufficiently large switch statements.

-fdce
Use the RTL dead code elimination pass.

-fearly-inlining
Perform early inlining.

-ffold-mem-offsets
Fold instructions calculating memory offsets to the memory access instruction if possible.

-ffp-int-builtin-inexact
Allow built-in functions ceil, floor, round, trunc to raise "inexact" exceptions.

-ffunction-cse
Allow function addresses to be held in registers.

-fgcse-lm
Perform enhanced load motion during global common subexpression elimination.

-finline-atomics
Inline __atomic operations when a lock free instruction sequence is available.

-fipa-stack-alignment
Reduce stack alignment on call sites if possible.

-fipa-strict-aliasing
Assume strict aliasing rules apply across (uninlined) function boundaries.

-fira-hoist-pressure
Use IRA based register pressure calculation in RTL hoist optimizations.

-fira-share-save-slots
Share slots for saving different hard registers.

-fira-share-spill-slots
Share stack slots for spilled pseudo-registers.

-fivopts
Optimize induction variables on trees.

-fjump-tables
Use jump tables for sufficiently large switch statements.

-flifetime-dse
Tell DSE that the storage for a C++ object is dead when the constructor starts and when the destructor finishes.

-fmath-errno
Set errno after built-in math functions.

-fno-inline-stringops
This option lacks documentation.

-fpeephole
Enable machine specific peephole optimizations.

-fplt
Use PLT for PIC calls (-fno-plt: load the address from GOT at call site).

-fprintf-return-value
Treat known sprintf return values as constants.

-freg-struct-return
Return small aggregates in registers.

-fsched-critical-path-heuristic
Enable the critical path heuristic in the scheduler.

-fsched-dep-count-heuristic
Enable the dependent count heuristic in the scheduler.

-fsched-group-heuristic
Enable the group heuristic in the scheduler.

-fsched-interblock
Enable scheduling across basic blocks.

-fsched-last-insn-heuristic
Enable the last instruction heuristic in the scheduler.

-fsched-rank-heuristic
Enable the rank heuristic in the scheduler.

-fsched-spec
Allow speculative motion of non-loads.

-fsched-spec-insn-heuristic
Enable the speculative instruction heuristic in the scheduler.

-fsched-stalled-insns-dep
Set dependence distance checking in premature scheduling of queued insns.

-fschedule-fusion
Perform a target dependent instruction fusion optimization pass.

-fsemantic-interposition
Allow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker.

-fshort-enums
Use the narrowest integer type possible for enumeration types.

-fshrink-wrap-separate
Shrink-wrap parts of the prologue and epilogue separately.

-fsigned-zeros
Disable floating point optimizations that ignore the IEEE signedness of zero.

-fsplit-ivs-in-unroller
Split lifetimes of induction variables when loops are unrolled.

-fssa-backprop
Enable backward propagation of use properties at the SSA level.

-fstdarg-opt
Optimize amount of stdarg registers saved to stack at start of function.

-ftrapping-math
Assume floating-point operations can trap.

-ftree-forwprop
Enable forward propagation on trees.

-ftree-loop-im
Enable loop invariant motion on trees.

-ftree-loop-ivcanon
Create canonical induction variables in loops.

-ftree-loop-optimize
Enable loop optimizations on tree level.

-ftree-phiprop
Enable hoisting loads from conditional pointers.

-ftree-reassoc
Enable reassociation on tree level.

-ftree-scev-cprop
Enable copy propagation of scalar-evolution information.

-funreachable-traps
Trap on __builtin_unreachable instead of using it for optimization.

-funwind-tables
Just generate unwind tables for exception handling.

